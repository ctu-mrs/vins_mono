name: vio_simulation
root: ./
startup_window: status
pre_window: export UAV_NAME=uav1; export RUN_TYPE=simulation; export UAV_TYPE=f330; export WORLD_NAME=simulation; export SENSORS="garmin_down"
windows:
  - roscore:
      layout: tiled
      panes:
        - roscore
  - gazebo:
      layout: tiled
      panes:
        - waitForRos; roslaunch mrs_simulation simulation.launch world_name:=grass_plane gui:=true
        - waitForOdometry; gz camera -c gzclient_camera -f uav1; history -s gz camera -c gzclient_camera -f uav1
  - status:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mrs_uav_status status.launch
  - VINS:
      layout: tiled
      panes:
        -  waitForOdometry; roslaunch vins_estimator simulation_fisheye.launch
        -  'history -s roslaunch vins_republisher vins_republisher_simulation.launch'
        # -  waitForOdometry; rostopic echo /vins_estimator/odometry_tf/pose
        # -  waitForOdometry; rostopic echo /uav1/odometry/gps_local_odom/pose
        # -  waitForOdometry; rostopic echo /uav1/odometry/odom_main/pose
  - VINS help:
      layout: tiled
      panes:
        - 'history -s rosservice call /uav1/odometry/change_estimator_type_string VIO; rosservice call /uav1/odometry/change_hdg_estimator_type_string VIO; rosservice call /uav1/odometry/change_alt_estimator_type_string VIO'
        # -  waitForOdometry; roslaunch camera_republisher camera_republisher.launch
        # -  waitForOdometry; roslaunch tf_publisher tf_publisher.launch
        # -  waitForOdometry; roslaunch flame_ros flame_nodelet.launch
        - waitForOdometry; rostopic hz /uav1/vio/camera/image_raw -w 200
        # - waitForOdometry; rosrun mrs_uav_general record_vio.sh
  - spawn:
      layout: tiled
      panes:
        - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-vio"
        # - waitForSimulation; rosservice call /mrs_drone_spawner/spawn "1 $UAV_TYPE --enable-rangefinder --enable-bluefox-camera"
  - control:
      layout: tiled
      panes:
        - waitForOdometry; roslaunch mrs_uav_general core.launch config_odometry:=./custom_configs/default_config.yaml config_constraint_manager:=./custom_configs/constraints.yaml config_uav_manager:=./custom_configs/uav_manager.yaml
  - takeoff:
      layout: tiled
      panes:
        - waitForSimulation; roslaunch mrs_uav_general automatic_start.launch
        - 'waitForControl;
          rosservice call /$UAV_NAME/mavros/cmd/arming 1;
          sleep 2;
          rosservice call /$UAV_NAME/mavros/set_mode 0 offboard'
  - goto:
      layout: tiled
      panes:
        - 'history -s rosservice call /$UAV_NAME/control_manager/goto \"goal: \[0.0, 10.0, 1.5, 0.0\]\"'
  - rviz:
      layout: tiled
      panes:
        - waitForControl; rviz -d ./rviz.rviz
        - waitForControl; roslaunch mrs_rviz_plugins load_robot.launch
  - easy_control:
      layout: tiled
      panes:
        # - waitForControl; waitForControl; roslaunch mrs_uav_general logitech_joystick.launch
        - waitForControl; waitForControl; roslaunch mrs_rviz_plugins rviz_interface.launch
  - layout:
      layout: tiled
      panes:
        - waitForControl; sleep 3; ~/.i3/layout_manager.sh ./layout.json
